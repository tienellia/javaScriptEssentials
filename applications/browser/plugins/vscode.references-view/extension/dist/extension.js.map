{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://references-view/./src/calls/index.ts","webpack://references-view/./src/calls/model.ts","webpack://references-view/./src/highlights.ts","webpack://references-view/./src/navigation.ts","webpack://references-view/./src/references/index.ts","webpack://references-view/./src/references/model.ts","webpack://references-view/./src/tree.ts","webpack://references-view/./src/types/index.ts","webpack://references-view/./src/types/model.ts","webpack://references-view/./src/utils.ts","webpack://references-view/external commonjs \"vscode\"","webpack://references-view/webpack/bootstrap","webpack://references-view/./src/extension.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { CallItem, CallsDirection, CallsTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichCallsDirection(context.workspaceState, CallsDirection.Incoming);\n\n\tfunction showCallHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new CallsTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setCallsDirection(value: CallsDirection, anchor: CallItem | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: CallsTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof CallItem) {\n\t\t\tnewInput = new CallsTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (oldInput instanceof CallsTreeInput) {\n\t\t\tnewInput = new CallsTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showCallHierarchy', showCallHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showOutgoingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Outgoing, item)),\n\t\tvscode.commands.registerCommand('references-view.showIncomingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Incoming, item)),\n\t\tvscode.commands.registerCommand('references-view.removeCallItem', removeCallItem)\n\t);\n}\n\nfunction removeCallItem(item: CallItem | unknown): void {\n\tif (item instanceof CallItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichCallsDirection {\n\n\tprivate static _key = 'references-view.callHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<'showIncoming' | 'showOutgoing'>('references-view.callHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: CallsDirection = CallsDirection.Outgoing,\n\t) {\n\t\tconst raw = _mem.get<number>(RichCallsDirection._key);\n\t\tif (typeof raw === 'number' && raw >= 0 && raw <= 1) {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: CallsDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(this._value === CallsDirection.Incoming ? 'showIncoming' : 'showOutgoing');\n\t\tthis._mem.update(RichCallsDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\n\nexport class CallsTreeInput implements SymbolTreeInput<CallItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'callHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: CallsDirection,\n\t) {\n\t\tthis.title = direction === CallsDirection.Incoming\n\t\t\t? vscode.l10n.t('Callers Of')\n\t\t\t: vscode.l10n.t('Calls From');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new CallsModel(this.direction, items ?? []);\n\t\tconst provider = new CallItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): CallsTreeInput {\n\t\treturn new CallsTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum CallsDirection {\n\tIncoming,\n\tOutgoing\n}\n\n\n\nexport class CallItem {\n\n\tchildren?: CallItem[];\n\n\tconstructor(\n\t\treadonly model: CallsModel,\n\t\treadonly item: vscode.CallHierarchyItem,\n\t\treadonly parent: CallItem | undefined,\n\t\treadonly locations: vscode.Location[] | undefined\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass CallsModel implements SymbolItemNavigation<CallItem>, SymbolItemEditorHighlights<CallItem>, SymbolItemDragAndDrop<CallItem> {\n\n\treadonly roots: CallItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<CallsModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: CallsDirection, items: vscode.CallHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new CallItem(this, item, undefined, undefined));\n\t}\n\n\tprivate async _resolveCalls(call: CallItem): Promise<CallItem[]> {\n\t\tif (this.direction === CallsDirection.Incoming) {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.from, call, item.fromRanges.map(range => new vscode.Location(item.from.uri, range)))) : [];\n\t\t} else {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.to, call, item.fromRanges.map(range => new vscode.Location(call.item.uri, range)))) : [];\n\t\t}\n\t}\n\n\tasync getCallChildren(call: CallItem): Promise<CallItem[]> {\n\t\tif (!call.children) {\n\t\t\tcall.children = await this._resolveCalls(call);\n\t\t}\n\t\treturn call.children;\n\t}\n\n\t// -- navigation\n\n\tlocation(item: CallItem) {\n\t\treturn new vscode.Location(item.item.uri, item.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): CallItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: CallItem): CallItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: CallItem): CallItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: CallItem, fwd: boolean): CallItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- dnd\n\n\tgetDragUri(item: CallItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(item: CallItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tif (!item.locations) {\n\t\t\treturn item.item.uri.toString() === uri.toString() ? [item.item.selectionRange] : undefined;\n\t\t}\n\t\treturn item.locations\n\t\t\t.filter(loc => loc.uri.toString() === uri.toString())\n\t\t\t.map(loc => loc.range);\n\t}\n\n\tremove(item: CallItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass CallItemDataProvider implements vscode.TreeDataProvider<CallItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<CallItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: CallsModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof CallItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: CallItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.tooltip = item.label && element.item.detail ? `${item.label} - ${element.item.detail}` : item.label ? `${item.label}` : element.item.detail;\n\t\titem.contextValue = 'call-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\n\t\ttype OpenArgs = [vscode.Uri, vscode.TextDocumentShowOptions];\n\t\tlet openArgs: OpenArgs;\n\n\t\tif (element.model.direction === CallsDirection.Outgoing) {\n\n\t\t\topenArgs = [element.item.uri, { selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }];\n\n\t\t} else {\n\t\t\t// incoming call -> reveal first call instead of caller\n\t\t\tlet firstLoctionStart: vscode.Position | undefined;\n\t\t\tif (element.locations) {\n\t\t\t\tfor (const loc of element.locations) {\n\t\t\t\t\tif (loc.uri.toString() === element.item.uri.toString()) {\n\t\t\t\t\t\tfirstLoctionStart = firstLoctionStart?.isBefore(loc.range.start) ? firstLoctionStart : loc.range.start;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!firstLoctionStart) {\n\t\t\t\tfirstLoctionStart = element.item.selectionRange.start;\n\t\t\t}\n\t\t\topenArgs = [element.item.uri, { selection: new vscode.Range(firstLoctionStart, firstLoctionStart) }];\n\t\t}\n\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Call'),\n\t\t\targuments: openArgs\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: CallItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getCallChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: CallItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights } from './references-view';\n\nexport class EditorHighlights<T> {\n\n\tprivate readonly _decorationType = vscode.window.createTextEditorDecorationType({\n\t\tbackgroundColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t\trangeBehavior: vscode.DecorationRangeBehavior.ClosedClosed,\n\t\toverviewRulerLane: vscode.OverviewRulerLane.Center,\n\t\toverviewRulerColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t});\n\n\tprivate readonly disposables: vscode.Disposable[] = [];\n\tprivate readonly _ignore = new Set<string>();\n\n\tconstructor(private readonly _view: vscode.TreeView<T>, private readonly _delegate: SymbolItemEditorHighlights<T>) {\n\t\tthis.disposables.push(\n\t\t\tvscode.workspace.onDidChangeTextDocument(e => this._ignore.add(e.document.uri.toString())),\n\t\t\tvscode.window.onDidChangeActiveTextEditor(() => _view.visible && this.update()),\n\t\t\t_view.onDidChangeVisibility(e => e.visible ? this._show() : this._hide()),\n\t\t\t_view.onDidChangeSelection(() => {\n\t\t\t\tif (_view.visible) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis._show();\n\t}\n\n\tdispose() {\n\t\tvscode.Disposable.from(...this.disposables).dispose();\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tprivate _show(): void {\n\t\tconst { activeTextEditor: editor } = vscode.window;\n\t\tif (!editor || !editor.viewColumn) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._ignore.has(editor.document.uri.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tconst [anchor] = this._view.selection;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges = this._delegate.getEditorHighlights(anchor, editor.document.uri);\n\t\tif (ranges) {\n\t\t\teditor.setDecorations(this._decorationType, ranges);\n\t\t}\n\t}\n\n\tprivate _hide(): void {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tthis._hide();\n\t\tthis._show();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemNavigation } from './references-view';\nimport { ContextKey } from './utils';\n\nexport class Navigation {\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxCanNavigate = new ContextKey<boolean>('references-view.canNavigate');\n\n\tprivate _delegate?: SymbolItemNavigation<unknown>;\n\n\tconstructor(private readonly _view: vscode.TreeView<unknown>) {\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.next', () => this.next(false)),\n\t\t\tvscode.commands.registerCommand('references-view.prev', () => this.previous(false)),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t}\n\n\tupdate(delegate: SymbolItemNavigation<unknown> | undefined) {\n\t\tthis._delegate = delegate;\n\t\tthis._ctxCanNavigate.set(Boolean(this._delegate));\n\t}\n\n\tprivate _anchor(): undefined | unknown {\n\t\tif (!this._delegate) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [sel] = this._view.selection;\n\t\tif (sel) {\n\t\t\treturn sel;\n\t\t}\n\t\tif (!vscode.window.activeTextEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._delegate.nearest(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active);\n\t}\n\n\tprivate _open(loc: vscode.Location, preserveFocus: boolean) {\n\t\tvscode.commands.executeCommand('vscode.open', loc.uri, {\n\t\t\tselection: new vscode.Selection(loc.range.start, loc.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n\n\tprevious(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.previous(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n\n\tnext(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.next(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { FileItem, ReferenceItem, ReferencesModel, ReferencesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tfunction findLocations(title: string, command: string) {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new ReferencesTreeInput(title, new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), command);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.findReferences', () => findLocations('References', 'vscode.executeReferenceProvider')),\n\t\tvscode.commands.registerCommand('references-view.findImplementations', () => findLocations('Implementations', 'vscode.executeImplementationProvider')),\n\t\t// --- legacy name\n\t\tvscode.commands.registerCommand('references-view.find', (...args: any[]) => vscode.commands.executeCommand('references-view.findReferences', ...args)),\n\t\tvscode.commands.registerCommand('references-view.removeReferenceItem', removeReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.copy', copyCommand),\n\t\tvscode.commands.registerCommand('references-view.copyAll', copyAllCommand),\n\t\tvscode.commands.registerCommand('references-view.copyPath', copyPathCommand),\n\t);\n\n\n\t// --- references.preferredLocation setting\n\n\tlet showReferencesDisposable: vscode.Disposable | undefined;\n\tconst config = 'references.preferredLocation';\n\tfunction updateShowReferences(event?: vscode.ConfigurationChangeEvent) {\n\t\tif (event && !event.affectsConfiguration(config)) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = vscode.workspace.getConfiguration().get<string>(config);\n\n\t\tshowReferencesDisposable?.dispose();\n\t\tshowReferencesDisposable = undefined;\n\n\t\tif (value === 'view') {\n\t\t\tshowReferencesDisposable = vscode.commands.registerCommand('editor.action.showReferences', async (uri: vscode.Uri, position: vscode.Position, locations: vscode.Location[]) => {\n\t\t\t\tconst input = new ReferencesTreeInput(vscode.l10n.t('References'), new vscode.Location(uri, position), 'vscode.executeReferenceProvider', locations);\n\t\t\t\ttree.setInput(input);\n\t\t\t});\n\t\t}\n\t}\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(updateShowReferences));\n\tcontext.subscriptions.push({ dispose: () => showReferencesDisposable?.dispose() });\n\tupdateShowReferences();\n}\n\nconst copyAllCommand = async (item: ReferenceItem | FileItem | unknown) => {\n\tif (item instanceof ReferenceItem) {\n\t\tcopyCommand(item.file.model);\n\t} else if (item instanceof FileItem) {\n\t\tcopyCommand(item.model);\n\t}\n};\n\nfunction removeReferenceItem(item: FileItem | ReferenceItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\titem.remove();\n\t} else if (item instanceof ReferenceItem) {\n\t\titem.remove();\n\t}\n}\n\n\nasync function copyCommand(item: ReferencesModel | ReferenceItem | FileItem | unknown) {\n\tlet val: string | undefined;\n\tif (item instanceof ReferencesModel) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof ReferenceItem) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof FileItem) {\n\t\tval = await item.asCopyText();\n\t}\n\tif (val) {\n\t\tawait vscode.env.clipboard.writeText(val);\n\t}\n}\n\nasync function copyPathCommand(item: FileItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\tif (item.uri.scheme === 'file') {\n\t\t\tvscode.env.clipboard.writeText(item.uri.fsPath);\n\t\t} else {\n\t\t\tvscode.env.clipboard.writeText(item.uri.toString(true));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput, SymbolTreeModel } from '../references-view';\nimport { asResourceUrl, del, getPreviewChunks, tail } from '../utils';\n\nexport class ReferencesTreeInput implements SymbolTreeInput<FileItem | ReferenceItem> {\n\n\treadonly contextValue: string;\n\n\tconstructor(\n\t\treadonly title: string,\n\t\treadonly location: vscode.Location,\n\t\tprivate readonly _command: string,\n\t\tprivate readonly _result?: vscode.Location[] | vscode.LocationLink[]\n\t) {\n\t\tthis.contextValue = _command;\n\t}\n\n\tasync resolve() {\n\n\t\tlet model: ReferencesModel;\n\t\tif (this._result) {\n\t\t\tmodel = new ReferencesModel(this._result);\n\t\t} else {\n\t\t\tconst resut = await Promise.resolve(vscode.commands.executeCommand<vscode.Location[] | vscode.LocationLink[]>(this._command, this.location.uri, this.location.range.start));\n\t\t\tmodel = new ReferencesModel(resut ?? []);\n\t\t}\n\n\t\tif (model.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = new ReferencesTreeDataProvider(model);\n\n\t\treturn <SymbolTreeModel<FileItem | ReferenceItem>>{\n\t\t\tprovider,\n\t\t\tget message() { return model.message; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose(): void {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): ReferencesTreeInput {\n\t\treturn new ReferencesTreeInput(this.title, location, this._command);\n\t}\n}\n\nexport class ReferencesModel implements SymbolItemNavigation<FileItem | ReferenceItem>, SymbolItemEditorHighlights<FileItem | ReferenceItem>, SymbolItemDragAndDrop<FileItem | ReferenceItem> {\n\n\tprivate _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\treadonly items: FileItem[] = [];\n\n\tconstructor(locations: vscode.Location[] | vscode.LocationLink[]) {\n\t\tlet last: FileItem | undefined;\n\t\tfor (const item of locations.sort(ReferencesModel._compareLocations)) {\n\t\t\tconst loc = item instanceof vscode.Location\n\t\t\t\t? item\n\t\t\t\t: new vscode.Location(item.targetUri, item.targetRange);\n\n\t\t\tif (!last || ReferencesModel._compareUriIgnoreFragment(last.uri, loc.uri) !== 0) {\n\t\t\t\tlast = new FileItem(loc.uri.with({ fragment: '' }), [], this);\n\t\t\t\tthis.items.push(last);\n\t\t\t}\n\t\t\tlast.references.push(new ReferenceItem(loc, last));\n\t\t}\n\t}\n\n\tprivate static _compareUriIgnoreFragment(a: vscode.Uri, b: vscode.Uri): number {\n\t\tconst aStr = a.with({ fragment: '' }).toString();\n\t\tconst bStr = b.with({ fragment: '' }).toString();\n\t\tif (aStr < bStr) {\n\t\t\treturn -1;\n\t\t} else if (aStr > bStr) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate static _compareLocations(a: vscode.Location | vscode.LocationLink, b: vscode.Location | vscode.LocationLink): number {\n\t\tconst aUri = a instanceof vscode.Location ? a.uri : a.targetUri;\n\t\tconst bUri = b instanceof vscode.Location ? b.uri : b.targetUri;\n\t\tif (aUri.toString() < bUri.toString()) {\n\t\t\treturn -1;\n\t\t} else if (aUri.toString() > bUri.toString()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst aRange = a instanceof vscode.Location ? a.range : a.targetRange;\n\t\tconst bRange = b instanceof vscode.Location ? b.range : b.targetRange;\n\t\tif (aRange.start.isBefore(bRange.start)) {\n\t\t\treturn -1;\n\t\t} else if (aRange.start.isAfter(bRange.start)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- adapter\n\n\tget message() {\n\t\tif (this.items.length === 0) {\n\t\t\treturn vscode.l10n.t('No results.');\n\t\t}\n\t\tconst total = this.items.reduce((prev, cur) => prev + cur.references.length, 0);\n\t\tconst files = this.items.length;\n\t\tif (total === 1 && files === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} file', total, files);\n\t\t} else if (total === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} files', total, files);\n\t\t} else if (files === 1) {\n\t\t\treturn vscode.l10n.t('{0} results in {1} file', total, files);\n\t\t} else {\n\t\t\treturn vscode.l10n.t('{0} results in {1} files', total, files);\n\t\t}\n\t}\n\n\tlocation(item: FileItem | ReferenceItem) {\n\t\treturn item instanceof ReferenceItem\n\t\t\t? item.location\n\t\t\t: new vscode.Location(item.uri, item.references[0]?.location.range ?? new vscode.Position(0, 0));\n\t}\n\n\tnearest(uri: vscode.Uri, position: vscode.Position): FileItem | ReferenceItem | undefined {\n\n\t\tif (this.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// NOTE: this.items is sorted by location (uri/range)\n\t\tfor (const item of this.items) {\n\t\t\tif (item.uri.toString() === uri.toString()) {\n\t\t\t\t// (1) pick the item at the request position\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.contains(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// (2) pick the first item after or last before the request position\n\t\t\t\tlet lastBefore: ReferenceItem | undefined;\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.end.isAfter(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t\tlastBefore = ref;\n\t\t\t\t}\n\t\t\t\tif (lastBefore) {\n\t\t\t\t\treturn lastBefore;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// (3) pick the file with the longest common prefix\n\t\tlet best = 0;\n\t\tconst bestValue = ReferencesModel._prefixLen(this.items[best].toString(), uri.toString());\n\n\t\tfor (let i = 1; i < this.items.length; i++) {\n\t\t\tconst value = ReferencesModel._prefixLen(this.items[i].uri.toString(), uri.toString());\n\t\t\tif (value > bestValue) {\n\t\t\t\tbest = i;\n\t\t\t}\n\t\t}\n\n\t\treturn this.items[best].references[0];\n\t}\n\n\tprivate static _prefixLen(a: string, b: string): number {\n\t\tlet pos = 0;\n\t\twhile (pos < a.length && pos < b.length && a.charCodeAt(pos) === b.charCodeAt(pos)) {\n\t\t\tpos += 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\tnext(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, true) ?? item;\n\t}\n\n\tprevious(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, false) ?? item;\n\t}\n\n\tprivate _move(item: FileItem | ReferenceItem, fwd: boolean): ReferenceItem | void {\n\n\t\tconst delta = fwd ? +1 : -1;\n\n\t\tconst _move = (item: FileItem): FileItem => {\n\t\t\tconst idx = (this.items.indexOf(item) + delta + this.items.length) % this.items.length;\n\t\t\treturn this.items[idx];\n\t\t};\n\n\t\tif (item instanceof FileItem) {\n\t\t\tif (fwd) {\n\t\t\t\treturn _move(item).references[0];\n\t\t\t} else {\n\t\t\t\treturn tail(_move(item).references);\n\t\t\t}\n\t\t}\n\n\t\tif (item instanceof ReferenceItem) {\n\t\t\tconst idx = item.file.references.indexOf(item) + delta;\n\t\t\tif (idx < 0) {\n\t\t\t\treturn tail(_move(item.file).references);\n\t\t\t} else if (idx >= item.file.references.length) {\n\t\t\t\treturn _move(item.file).references[0];\n\t\t\t} else {\n\t\t\t\treturn item.file.references[idx];\n\t\t\t}\n\t\t}\n\t}\n\n\tgetEditorHighlights(_item: FileItem | ReferenceItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tconst file = this.items.find(file => file.uri.toString() === uri.toString());\n\t\treturn file?.references.map(ref => ref.location.range);\n\t}\n\n\tremove(item: FileItem | ReferenceItem) {\n\t\tif (item instanceof FileItem) {\n\t\t\tdel(this.items, item);\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t} else {\n\t\t\tdel(item.file.references, item);\n\t\t\tif (item.file.references.length === 0) {\n\t\t\t\tdel(this.items, item.file);\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t} else {\n\t\t\t\tthis._onDidChange.fire(item.file);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = '';\n\t\tfor (const item of this.items) {\n\t\t\tresult += `${await item.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDragUri(item: FileItem | ReferenceItem): vscode.Uri | undefined {\n\t\tif (item instanceof FileItem) {\n\t\t\treturn item.uri;\n\t\t} else {\n\t\t\treturn asResourceUrl(item.file.uri, item.location.range);\n\t\t}\n\t}\n}\n\nclass ReferencesTreeDataProvider implements vscode.TreeDataProvider<FileItem | ReferenceItem> {\n\n\tprivate readonly _listener: vscode.Disposable;\n\tprivate readonly _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tconstructor(private readonly _model: ReferencesModel) {\n\t\tthis._listener = _model.onDidChangeTreeData(() => this._onDidChange.fire(undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._listener.dispose();\n\t}\n\n\tasync getTreeItem(element: FileItem | ReferenceItem) {\n\t\tif (element instanceof FileItem) {\n\t\t\t// files\n\t\t\tconst result = new vscode.TreeItem(element.uri);\n\t\t\tresult.contextValue = 'file-item';\n\t\t\tresult.description = true;\n\t\t\tresult.iconPath = vscode.ThemeIcon.File;\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// references\n\t\t\tconst { range } = element.location;\n\t\t\tconst doc = await element.getDocument(true);\n\t\t\tconst { before, inside, after } = getPreviewChunks(doc, range);\n\n\t\t\tconst label: vscode.TreeItemLabel = {\n\t\t\t\tlabel: before + inside + after,\n\t\t\t\thighlights: [[before.length, before.length + inside.length]]\n\t\t\t};\n\n\t\t\tconst result = new vscode.TreeItem(label);\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\t\tresult.contextValue = 'reference-item';\n\t\t\tresult.command = {\n\t\t\t\tcommand: 'vscode.open',\n\t\t\t\ttitle: vscode.l10n.t('Open Reference'),\n\t\t\t\targuments: [\n\t\t\t\t\telement.location.uri,\n\t\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: range.with({ end: range.start }) }\n\t\t\t\t]\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tasync getChildren(element?: FileItem | ReferenceItem) {\n\t\tif (!element) {\n\t\t\treturn this._model.items;\n\t\t}\n\t\tif (element instanceof FileItem) {\n\t\t\treturn element.references;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetParent(element: FileItem | ReferenceItem) {\n\t\treturn element instanceof ReferenceItem ? element.file : undefined;\n\t}\n}\n\nexport class FileItem {\n\n\tconstructor(\n\t\treadonly uri: vscode.Uri,\n\t\treadonly references: Array<ReferenceItem>,\n\t\treadonly model: ReferencesModel\n\t) { }\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = `${vscode.workspace.asRelativePath(this.uri)}\\n`;\n\t\tfor (const ref of this.references) {\n\t\t\tresult += `  ${await ref.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ReferenceItem {\n\n\tprivate _document: Thenable<vscode.TextDocument> | undefined;\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly file: FileItem,\n\t) { }\n\n\tasync getDocument(warmUpNext?: boolean) {\n\t\tif (!this._document) {\n\t\t\tthis._document = vscode.workspace.openTextDocument(this.location.uri);\n\t\t}\n\t\tif (warmUpNext) {\n\t\t\t// load next document once this document has been loaded\n\t\t\tconst next = this.file.model.next(this.file);\n\t\t\tif (next instanceof FileItem && next !== this.file) {\n\t\t\t\tvscode.workspace.openTextDocument(next.uri);\n\t\t\t} else if (next instanceof ReferenceItem) {\n\t\t\t\tvscode.workspace.openTextDocument(next.location.uri);\n\t\t\t}\n\t\t}\n\t\treturn this._document;\n\t}\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.file.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tconst doc = await this.getDocument();\n\t\tconst chunks = getPreviewChunks(doc, this.location.range, 21, false);\n\t\treturn `${this.location.range.start.line + 1}, ${this.location.range.start.character + 1}: ${chunks.before + chunks.inside + chunks.after}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { EditorHighlights } from './highlights';\nimport { Navigation } from './navigation';\nimport { SymbolItemDragAndDrop, SymbolTreeInput } from './references-view';\nimport { ContextKey, isValidRequestPosition, WordAnchor } from './utils';\n\n\nexport class SymbolsTree {\n\n\treadonly viewId = 'references-view.tree';\n\n\tprivate readonly _ctxIsActive = new ContextKey<boolean>('reference-list.isActive');\n\tprivate readonly _ctxHasResult = new ContextKey<boolean>('reference-list.hasResult');\n\tprivate readonly _ctxInputSource = new ContextKey<string>('reference-list.source');\n\n\tprivate readonly _history = new TreeInputHistory(this);\n\tprivate readonly _provider = new TreeDataProviderDelegate();\n\tprivate readonly _dnd = new TreeDndDelegate();\n\tprivate readonly _tree: vscode.TreeView<unknown>;\n\tprivate readonly _navigation: Navigation;\n\n\tprivate _input?: SymbolTreeInput<unknown>;\n\tprivate _sessionDisposable?: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis._tree = vscode.window.createTreeView<unknown>(this.viewId, {\n\t\t\ttreeDataProvider: this._provider,\n\t\t\tshowCollapseAll: true,\n\t\t\tdragAndDropController: this._dnd\n\t\t});\n\t\tthis._navigation = new Navigation(this._tree);\n\t}\n\n\tdispose(): void {\n\t\tthis._history.dispose();\n\t\tthis._tree.dispose();\n\t\tthis._sessionDisposable?.dispose();\n\t}\n\n\tgetInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn this._input;\n\t}\n\n\tasync setInput(input: SymbolTreeInput<unknown>) {\n\n\t\tif (!await isValidRequestPosition(input.location.uri, input.location.range.start)) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._ctxInputSource.set(input.contextValue);\n\t\tthis._ctxIsActive.set(true);\n\t\tthis._ctxHasResult.set(true);\n\t\tvscode.commands.executeCommand(`${this.viewId}.focus`);\n\n\t\tconst newInputKind = !this._input || Object.getPrototypeOf(this._input) !== Object.getPrototypeOf(input);\n\t\tthis._input = input;\n\t\tthis._sessionDisposable?.dispose();\n\n\t\tthis._tree.title = input.title;\n\t\tthis._tree.message = newInputKind ? undefined : this._tree.message;\n\n\t\tconst modelPromise = Promise.resolve(input.resolve());\n\n\t\t// set promise to tree data provider to trigger tree loading UI\n\t\tthis._provider.update(modelPromise.then(model => model?.provider ?? this._history));\n\t\tthis._dnd.update(modelPromise.then(model => model?.dnd));\n\n\t\tconst model = await modelPromise;\n\t\tif (this._input !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!model) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._history.add(input);\n\t\tthis._tree.message = model.message;\n\n\t\t// navigation\n\t\tthis._navigation.update(model.navigation);\n\n\t\t// reveal & select\n\t\tconst selection = model.navigation?.nearest(input.location.uri, input.location.range.start);\n\t\tif (selection && this._tree.visible) {\n\t\t\tawait this._tree.reveal(selection, { select: true, focus: true, expand: true });\n\t\t}\n\n\t\tconst disposables: vscode.Disposable[] = [];\n\n\t\t// editor highlights\n\t\tlet highlights: EditorHighlights<unknown> | undefined;\n\t\tif (model.highlights) {\n\t\t\thighlights = new EditorHighlights(this._tree, model.highlights);\n\t\t\tdisposables.push(highlights);\n\t\t}\n\n\t\t// listener\n\t\tif (model.provider.onDidChangeTreeData) {\n\t\t\tdisposables.push(model.provider.onDidChangeTreeData(() => {\n\t\t\t\tthis._tree.title = input.title;\n\t\t\t\tthis._tree.message = model.message;\n\t\t\t\thighlights?.update();\n\t\t\t}));\n\t\t}\n\t\tif (typeof model.dispose === 'function') {\n\t\t\tdisposables.push(new vscode.Disposable(() => model.dispose!()));\n\t\t}\n\t\tthis._sessionDisposable = vscode.Disposable.from(...disposables);\n\t}\n\n\tclearInput(): void {\n\t\tthis._sessionDisposable?.dispose();\n\t\tthis._input = undefined;\n\t\tthis._ctxHasResult.set(false);\n\t\tthis._ctxInputSource.reset();\n\t\tthis._tree.title = vscode.l10n.t('References');\n\t\tthis._tree.message = this._history.size === 0\n\t\t\t? vscode.l10n.t('No results.')\n\t\t\t: vscode.l10n.t('No results. Try running a previous search again:');\n\t\tthis._provider.update(Promise.resolve(this._history));\n\t}\n}\n\n// --- tree data\n\ninterface ActiveTreeDataProviderWrapper {\n\tprovider: Promise<vscode.TreeDataProvider<any>>;\n}\n\nclass TreeDataProviderDelegate implements vscode.TreeDataProvider<undefined> {\n\n\tprovider?: Promise<vscode.TreeDataProvider<any>>;\n\n\tprivate _sessionDispoables?: vscode.Disposable;\n\tprivate _onDidChange = new vscode.EventEmitter<any>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tupdate(provider: Promise<vscode.TreeDataProvider<any>>) {\n\n\t\tthis._sessionDispoables?.dispose();\n\t\tthis._sessionDispoables = undefined;\n\n\t\tthis._onDidChange.fire(undefined);\n\n\t\tthis.provider = provider;\n\n\t\tprovider.then(value => {\n\t\t\tif (this.provider === provider && value.onDidChangeTreeData) {\n\t\t\t\tthis._sessionDispoables = value.onDidChangeTreeData(this._onDidChange.fire, this._onDidChange);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.provider = undefined;\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tasync getTreeItem(element: unknown) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getTreeItem(element);\n\t}\n\n\tasync getChildren(parent?: unknown | undefined) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getChildren(parent);\n\t}\n\n\tasync getParent(element: unknown) {\n\t\tthis._assertProvider();\n\t\tconst provider = await this.provider;\n\t\treturn provider.getParent ? provider.getParent(element) : undefined;\n\t}\n\n\tprivate _assertProvider(): asserts this is ActiveTreeDataProviderWrapper {\n\t\tif (!this.provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t}\n}\n\n// --- tree dnd\n\nclass TreeDndDelegate implements vscode.TreeDragAndDropController<undefined> {\n\n\tprivate _delegate: SymbolItemDragAndDrop<undefined> | undefined;\n\n\treadonly dropMimeTypes: string[] = [];\n\n\treadonly dragMimeTypes: string[] = ['text/uri-list'];\n\n\tupdate(delegate: Promise<SymbolItemDragAndDrop<unknown> | undefined>) {\n\t\tthis._delegate = undefined;\n\t\tdelegate.then(value => this._delegate = value);\n\t}\n\n\thandleDrag(source: undefined[], data: vscode.DataTransfer) {\n\t\tif (this._delegate) {\n\t\t\tconst urls: string[] = [];\n\t\t\tfor (const item of source) {\n\t\t\t\tconst uri = this._delegate.getDragUri(item);\n\t\t\t\tif (uri) {\n\t\t\t\t\turls.push(uri.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (urls.length > 0) {\n\t\t\t\tdata.set('text/uri-list', new vscode.DataTransferItem(urls.join('\\r\\n')));\n\t\t\t}\n\t\t}\n\t}\n\n\thandleDrop(): void | Thenable<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\n// --- history\n\nclass HistoryItem {\n\n\treadonly description: string;\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly word: string,\n\t\treadonly anchor: WordAnchor,\n\t\treadonly input: SymbolTreeInput<unknown>,\n\t) {\n\t\tthis.description = `${vscode.workspace.asRelativePath(input.location.uri)} • ${input.title.toLocaleLowerCase()}`;\n\t}\n}\n\nclass TreeInputHistory implements vscode.TreeDataProvider<HistoryItem> {\n\n\tprivate readonly _onDidChangeTreeData = new vscode.EventEmitter<HistoryItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChangeTreeData.event;\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxHasHistory = new ContextKey<boolean>('reference-list.hasHistory');\n\tprivate readonly _inputs = new Map<string, HistoryItem>();\n\n\tconstructor(private readonly _tree: SymbolsTree) {\n\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.clear', () => _tree.clearInput()),\n\t\t\tvscode.commands.registerCommand('references-view.clearHistory', () => {\n\t\t\t\tthis.clear();\n\t\t\t\t_tree.clearInput();\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refind', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refresh', () => {\n\t\t\t\tconst item = Array.from(this._inputs.values()).pop();\n\t\t\t\tif (item) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('_references-view.showHistoryItem', async (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tconst position = item.anchor.guessedTrackedPosition() ?? item.input.location.range.start;\n\t\t\t\t\tawait vscode.commands.executeCommand('vscode.open', item.input.location.uri, { selection: new vscode.Range(position, position) });\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.pickFromHistory', async () => {\n\t\t\t\tinterface HistoryPick extends vscode.QuickPickItem {\n\t\t\t\t\titem: HistoryItem;\n\t\t\t\t}\n\t\t\t\tconst entries = await this.getChildren();\n\t\t\t\tconst picks = entries.map(item => <HistoryPick>{\n\t\t\t\t\tlabel: item.word,\n\t\t\t\t\tdescription: item.description,\n\t\t\t\t\titem\n\t\t\t\t});\n\t\t\t\tconst pick = await vscode.window.showQuickPick(picks, { placeHolder: vscode.l10n.t('Select previous reference search') });\n\t\t\t\tif (pick) {\n\t\t\t\t\tthis._reRunHistoryItem(pick.item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t\tthis._onDidChangeTreeData.dispose();\n\t}\n\n\tprivate _reRunHistoryItem(item: HistoryItem): void {\n\t\tthis._inputs.delete(item.key);\n\t\tconst newPosition = item.anchor.guessedTrackedPosition();\n\t\tlet newInput = item.input;\n\t\t// create a new input when having a tracked position which is\n\t\t// different than the original position.\n\t\tif (newPosition && !item.input.location.range.start.isEqual(newPosition)) {\n\t\t\tnewInput = item.input.with(new vscode.Location(item.input.location.uri, newPosition));\n\t\t}\n\t\tthis._tree.setInput(newInput);\n\t}\n\n\tasync add(input: SymbolTreeInput<unknown>) {\n\n\t\tconst doc = await vscode.workspace.openTextDocument(input.location.uri);\n\n\t\tconst anchor = new WordAnchor(doc, input.location.range.start);\n\t\tconst range = doc.getWordRangeAtPosition(input.location.range.start) ?? doc.getWordRangeAtPosition(input.location.range.start, /[^\\s]+/);\n\t\tconst word = range ? doc.getText(range) : '???';\n\n\t\tconst item = new HistoryItem(JSON.stringify([range?.start ?? input.location.range.start, input.location.uri, input.title]), word, anchor, input);\n\t\t// use filo-ordering of native maps\n\t\tthis._inputs.delete(item.key);\n\t\tthis._inputs.set(item.key, item);\n\t\tthis._ctxHasHistory.set(true);\n\t}\n\n\tclear(): void {\n\t\tthis._inputs.clear();\n\t\tthis._ctxHasHistory.set(false);\n\t\tthis._onDidChangeTreeData.fire(undefined);\n\t}\n\n\tget size() {\n\t\treturn this._inputs.size;\n\t}\n\n\t// --- tree data provider\n\n\tgetTreeItem(item: HistoryItem): vscode.TreeItem {\n\t\tconst result = new vscode.TreeItem(item.word);\n\t\tresult.description = item.description;\n\t\tresult.command = { command: '_references-view.showHistoryItem', arguments: [item], title: vscode.l10n.t('Rerun') };\n\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\tresult.contextValue = 'history-item';\n\t\treturn result;\n\t}\n\n\tgetChildren() {\n\t\treturn Promise.all([...this._inputs.values()].reverse());\n\t}\n\n\tgetParent() {\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { TypeHierarchyDirection, TypeItem, TypesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichTypesDirection(context.workspaceState, TypeHierarchyDirection.Subtypes);\n\n\tfunction showTypeHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new TypesTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setTypeHierarchyDirection(value: TypeHierarchyDirection, anchor: TypeItem | vscode.Location | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: TypesTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof TypeItem) {\n\t\t\tnewInput = new TypesTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (anchor instanceof vscode.Location) {\n\t\t\tnewInput = new TypesTreeInput(anchor, direction.value);\n\t\t} else if (oldInput instanceof TypesTreeInput) {\n\t\t\tnewInput = new TypesTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showTypeHierarchy', showTypeHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showSupertypes', (item: TypeItem | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Supertypes, item)),\n\t\tvscode.commands.registerCommand('references-view.showSubtypes', (item: TypeItem | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Subtypes, item)),\n\t\tvscode.commands.registerCommand('references-view.removeTypeItem', removeTypeItem)\n\t);\n}\n\nfunction removeTypeItem(item: TypeItem | unknown): void {\n\tif (item instanceof TypeItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichTypesDirection {\n\n\tprivate static _key = 'references-view.typeHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<TypeHierarchyDirection>('references-view.typeHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: TypeHierarchyDirection = TypeHierarchyDirection.Subtypes,\n\t) {\n\t\tconst raw = _mem.get<TypeHierarchyDirection>(RichTypesDirection._key);\n\t\tif (typeof raw === 'string') {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: TypeHierarchyDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(value);\n\t\tthis._mem.update(RichTypesDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\n\nexport class TypesTreeInput implements SymbolTreeInput<TypeItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'typeHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: TypeHierarchyDirection,\n\t) {\n\t\tthis.title = direction === TypeHierarchyDirection.Supertypes\n\t\t\t? vscode.l10n.t('Supertypes Of')\n\t\t\t: vscode.l10n.t('Subtypes Of');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.prepareTypeHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new TypesModel(this.direction, items ?? []);\n\t\tconst provider = new TypeItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): TypesTreeInput {\n\t\treturn new TypesTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum TypeHierarchyDirection {\n\tSubtypes = 'subtypes',\n\tSupertypes = 'supertypes'\n}\n\n\nexport class TypeItem {\n\n\tchildren?: TypeItem[];\n\n\tconstructor(\n\t\treadonly model: TypesModel,\n\t\treadonly item: vscode.TypeHierarchyItem,\n\t\treadonly parent: TypeItem | undefined,\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass TypesModel implements SymbolItemNavigation<TypeItem>, SymbolItemEditorHighlights<TypeItem>, SymbolItemDragAndDrop<TypeItem> {\n\n\treadonly roots: TypeItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<TypesModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: TypeHierarchyDirection, items: vscode.TypeHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new TypeItem(this, item, undefined));\n\t}\n\n\tprivate async _resolveTypes(currentType: TypeItem): Promise<TypeItem[]> {\n\t\tif (this.direction === TypeHierarchyDirection.Supertypes) {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSupertypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t} else {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSubtypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t}\n\t}\n\n\tasync getTypeChildren(item: TypeItem): Promise<TypeItem[]> {\n\t\tif (!item.children) {\n\t\t\titem.children = await this._resolveTypes(item);\n\t\t}\n\t\treturn item.children;\n\t}\n\n\t// -- dnd\n\n\tgetDragUri(item: TypeItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// -- navigation\n\n\tlocation(currentType: TypeItem) {\n\t\treturn new vscode.Location(currentType.item.uri, currentType.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): TypeItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: TypeItem): TypeItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: TypeItem): TypeItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: TypeItem, fwd: boolean): TypeItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(currentType: TypeItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\treturn currentType.item.uri.toString() === uri.toString() ? [currentType.item.selectionRange] : undefined;\n\t}\n\n\tremove(item: TypeItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass TypeItemDataProvider implements vscode.TreeDataProvider<TypeItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<TypeItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: TypesModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof TypeItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: TypeItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.contextValue = 'type-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Type'),\n\t\t\targuments: [\n\t\t\t\telement.item.uri,\n\t\t\t\t<vscode.TextDocumentShowOptions>{ selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }\n\t\t\t]\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: TypeItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getTypeChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: TypeItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function del<T>(array: T[], e: T): void {\n\tconst idx = array.indexOf(e);\n\tif (idx >= 0) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\nexport function tail<T>(array: T[]): T | undefined {\n\treturn array[array.length - 1];\n}\n\nexport function asResourceUrl(uri: vscode.Uri, range: vscode.Range): vscode.Uri {\n\treturn uri.with({ fragment: `L${1 + range.start.line},${1 + range.start.character}-${1 + range.end.line},${1 + range.end.character}` });\n}\n\nexport async function isValidRequestPosition(uri: vscode.Uri, position: vscode.Position) {\n\tconst doc = await vscode.workspace.openTextDocument(uri);\n\tlet range = doc.getWordRangeAtPosition(position);\n\tif (!range) {\n\t\trange = doc.getWordRangeAtPosition(position, /[^\\s]+/);\n\t}\n\treturn Boolean(range);\n}\n\nexport function getPreviewChunks(doc: vscode.TextDocument, range: vscode.Range, beforeLen: number = 8, trim: boolean = true) {\n\tconst previewStart = range.start.with({ character: Math.max(0, range.start.character - beforeLen) });\n\tconst wordRange = doc.getWordRangeAtPosition(previewStart);\n\tlet before = doc.getText(new vscode.Range(wordRange ? wordRange.start : previewStart, range.start));\n\tconst inside = doc.getText(range);\n\tconst previewEnd = range.end.translate(0, 331);\n\tlet after = doc.getText(new vscode.Range(range.end, previewEnd));\n\tif (trim) {\n\t\tbefore = before.replace(/^\\s*/g, '');\n\t\tafter = after.replace(/\\s*$/g, '');\n\t}\n\treturn { before, inside, after };\n}\n\nexport class ContextKey<V> {\n\n\tconstructor(readonly name: string) { }\n\n\tasync set(value: V) {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, value);\n\t}\n\n\tasync reset() {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, undefined);\n\t}\n}\n\nexport class WordAnchor {\n\n\tprivate readonly _version: number;\n\tprivate readonly _word: string | undefined;\n\n\tconstructor(private readonly _doc: vscode.TextDocument, private readonly _position: vscode.Position) {\n\t\tthis._version = _doc.version;\n\t\tthis._word = this._getAnchorWord(_doc, _position);\n\t}\n\n\tprivate _getAnchorWord(doc: vscode.TextDocument, pos: vscode.Position): string | undefined {\n\t\tconst range = doc.getWordRangeAtPosition(pos) || doc.getWordRangeAtPosition(pos, /[^\\s]+/);\n\t\treturn range && doc.getText(range);\n\t}\n\n\tguessedTrackedPosition(): vscode.Position | undefined {\n\t\t// funky entry\n\t\tif (!this._word) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes\n\t\tif (this._version === this._doc.version) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes here...\n\t\tconst wordNow = this._getAnchorWord(this._doc, this._position);\n\t\tif (this._word === wordNow) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// changes: search _word downwards and upwards\n\t\tconst startLine = this._position.line;\n\t\tlet i = 0;\n\t\tlet line: number;\n\t\tlet checked: boolean;\n\t\tdo {\n\t\t\tchecked = false;\n\t\t\t// nth line down\n\t\t\tline = startLine + i;\n\t\t\tif (line < this._doc.lineCount) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti += 1;\n\t\t\t// nth line up\n\t\t\tline = startLine - i;\n\t\t\tif (line >= 0) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (i < 100 && checked);\n\n\t\t// fallback\n\t\treturn this._position;\n\t}\n}\n\n// vscode.SymbolKind.File === 0, Module === 1, etc...\nconst _themeIconIds = [\n\t'symbol-file', 'symbol-module', 'symbol-namespace', 'symbol-package', 'symbol-class', 'symbol-method',\n\t'symbol-property', 'symbol-field', 'symbol-constructor', 'symbol-enum', 'symbol-interface',\n\t'symbol-function', 'symbol-variable', 'symbol-constant', 'symbol-string', 'symbol-number', 'symbol-boolean',\n\t'symbol-array', 'symbol-object', 'symbol-key', 'symbol-null', 'symbol-enum-member', 'symbol-struct',\n\t'symbol-event', 'symbol-operator', 'symbol-type-parameter'\n];\n\nexport function getThemeIcon(kind: vscode.SymbolKind): vscode.ThemeIcon | undefined {\n\tconst id = _themeIconIds[kind];\n\treturn id ? new vscode.ThemeIcon(id) : undefined;\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as calls from './calls';\nimport * as references from './references';\nimport { SymbolTree, SymbolTreeInput } from './references-view';\nimport { SymbolsTree } from './tree';\nimport * as types from './types';\n\nexport function activate(context: vscode.ExtensionContext): SymbolTree {\n\n\tconst tree = new SymbolsTree();\n\n\treferences.register(tree, context);\n\tcalls.register(tree, context);\n\ttypes.register(tree, context);\n\n\tfunction setInput(input: SymbolTreeInput<unknown>) {\n\t\ttree.setInput(input);\n\t}\n\n\tfunction getInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn tree.getInput();\n\t}\n\n\treturn { setInput, getInput };\n}\n"],"names":["tree","context","direction","RichCallsDirection","workspaceState","setCallsDirection","value","anchor","newInput","oldInput","getInput","CallItem","CallsTreeInput","vscode","Location","item","uri","selectionRange","start","location","setInput","subscriptions","push","commands","registerCommand","window","activeTextEditor","input","document","selection","active","removeCallItem","remove","constructor","_mem","_value","_ctxMode","ContextKey","raw","get","_key","this","set","update","contextValue","title","l10n","t","items","Promise","resolve","executeCommand","range","model","CallsModel","provider","CallItemDataProvider","roots","length","undefined","navigation","highlights","dnd","dispose","with","parent","locations","_onDidChange","EventEmitter","onDidChange","event","map","call","calls","from","fromRanges","to","children","_resolveCalls","nearest","_position","find","toString","next","_move","previous","fwd","tail","array","includes","idx","indexOf","getDragUri","asResourceUrl","getEditorHighlights","filter","loc","siblings","del","fire","_model","_emitter","onDidChangeTreeData","_modelListener","e","getTreeItem","element","TreeItem","name","openArgs","description","detail","tooltip","label","iconPath","getThemeIcon","kind","end","firstLoctionStart","isBefore","Range","command","arguments","collapsibleState","TreeItemCollapsibleState","Collapsed","getChildren","getCallChildren","getParent","_view","_delegate","_decorationType","createTextEditorDecorationType","backgroundColor","ThemeColor","rangeBehavior","DecorationRangeBehavior","ClosedClosed","overviewRulerLane","OverviewRulerLane","Center","overviewRulerColor","disposables","_ignore","Set","workspace","onDidChangeTextDocument","add","onDidChangeActiveTextEditor","visible","onDidChangeVisibility","_show","_hide","onDidChangeSelection","Disposable","editor","visibleTextEditors","setDecorations","viewColumn","has","ranges","_disposables","_ctxCanNavigate","delegate","Boolean","_anchor","sel","_open","preserveFocus","Selection","newItem","newLocation","reveal","select","focus","findLocations","ReferencesTreeInput","showReferencesDisposable","args","removeReferenceItem","copyCommand","copyAllCommand","copyPathCommand","config","updateShowReferences","affectsConfiguration","getConfiguration","async","position","onDidChangeConfiguration","ReferenceItem","file","FileItem","val","ReferencesModel","asCopyText","env","clipboard","writeText","scheme","fsPath","_command","_result","resut","ReferencesTreeDataProvider","message","last","sort","_compareLocations","targetUri","targetRange","_compareUriIgnoreFragment","fragment","references","a","b","aStr","bStr","aUri","bUri","aRange","bRange","isAfter","total","reduce","prev","cur","files","Position","ref","contains","lastBefore","best","bestValue","_prefixLen","i","pos","charCodeAt","delta","_item","result","_listener","ThemeIcon","File","doc","getDocument","before","inside","after","getPreviewChunks","None","asRelativePath","warmUpNext","_document","openTextDocument","chunks","line","character","viewId","_ctxIsActive","_ctxHasResult","_ctxInputSource","_history","TreeInputHistory","_provider","TreeDataProviderDelegate","_dnd","TreeDndDelegate","_tree","createTreeView","treeDataProvider","showCollapseAll","dragAndDropController","_navigation","Navigation","_sessionDisposable","_input","isValidRequestPosition","clearInput","newInputKind","Object","getPrototypeOf","modelPromise","then","expand","EditorHighlights","reset","size","_sessionDispoables","catch","err","console","error","_assertProvider","Error","dropMimeTypes","dragMimeTypes","handleDrag","source","data","urls","DataTransferItem","join","handleDrop","HistoryItem","key","word","toLocaleLowerCase","_onDidChangeTreeData","_ctxHasHistory","_inputs","Map","clear","_reRunHistoryItem","Array","values","pop","guessedTrackedPosition","picks","pick","showQuickPick","placeHolder","delete","newPosition","isEqual","WordAnchor","getWordRangeAtPosition","getText","JSON","stringify","all","reverse","RichTypesDirection","setTypeHierarchyDirection","TypeItem","TypesTreeInput","removeTypeItem","TypesModel","TypeItemDataProvider","currentType","types","_resolveTypes","getTypeChildren","splice","beforeLen","trim","previewStart","Math","max","wordRange","previewEnd","translate","replace","id","_themeIconIds","_doc","_version","version","_word","_getAnchorWord","wordNow","startLine","checked","lineCount","ch","lineAt","text","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","SymbolsTree","register"],"sourceRoot":""}