(()=>{"use strict";var __webpack_modules__={506:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(537);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "#memory-browser{align-items:left;box-sizing:border-box;height:100%;padding:10px}#memory-browser .group{display:flex;flex-direction:row;flex-wrap:wrap;align-items:flex-start}#memory-browser .input-group{align-self:center;margin:2px;margin-right:20px;flex-shrink:2}#memory-browser .input-group input,#memory-browser .input-group select{border-radius:5px;flex-basis:0}#memory-browser label{margin-right:10px}#memory-browser .seperator{border:1px solid;margin-top:10px}#memory-browser .monofont{font-family:\'Consolas\', \'Courier New\', Courier, monospace}\\n", "",{"version":3,"sources":["webpack://./src/memory/client/MemoryBrowser.scss"],"names":[],"mappings":"AASA,gBACE,gBAAiB,CACjB,qBAAsB,CACtB,WAAY,CACZ,YAAa,CAJf,uBAOI,YAAa,CACb,kBAAmB,CACnB,cAAe,CACf,sBAAuB,CAV3B,6BAcI,iBAAkB,CAClB,UAAW,CACX,iBAAkB,CAClB,aAAc,CAjBlB,uEAqBM,iBAAkB,CAClB,YAAa,CAtBnB,sBA2BI,iBAAkB,CA3BtB,2BA+BI,gBAAiB,CACjB,eAAgB,CAhCpB,0BAoCM,yDAA0D","sourcesContent":["/*********************************************************************\\n * Copyright (c) 2019 QNX Software Systems and others\\n *\\n * This program and the accompanying materials are made\\n * available under the terms of the Eclipse Public License 2.0\\n * which is available at https://www.eclipse.org/legal/epl-2.0/\\n *\\n * SPDX-License-Identifier: EPL-2.0\\n *********************************************************************/\\n#memory-browser {\\n  align-items: left;\\n  box-sizing: border-box;\\n  height: 100%;\\n  padding: 10px;\\n\\n  .group {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    align-items: flex-start;\\n  }\\n\\n  .input-group {\\n    align-self: center;\\n    margin: 2px;\\n    margin-right: 20px;\\n    flex-shrink: 2;\\n\\n    input,\\n    select {\\n      border-radius: 5px;\\n      flex-basis: 0;\\n    }\\n  }\\n\\n  label {\\n    margin-right: 10px;\\n  }\\n\\n  .seperator {\\n    border: 1px solid;\\n    margin-top: 10px;\\n  }\\n\\n  .monofont {\\n      font-family: \'Consolas\', \'Courier New\', Courier, monospace;\\n  }\\n}\\n"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA2LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNnSDtBQUNqQjtBQUMvRiw4QkFBOEIsbUZBQTJCLENBQUMsNEZBQXFDO0FBQy9GO0FBQ0EsMERBQTBELGlCQUFpQixzQkFBc0IsWUFBWSxhQUFhLHVCQUF1QixhQUFhLG1CQUFtQixlQUFlLHVCQUF1Qiw2QkFBNkIsa0JBQWtCLFdBQVcsa0JBQWtCLGNBQWMsdUVBQXVFLGtCQUFrQixhQUFhLHNCQUFzQixrQkFBa0IsMkJBQTJCLGlCQUFpQixnQkFBZ0IsMEJBQTBCLDBEQUEwRCxTQUFTLDZ6QkFBNnpCLHNCQUFzQiwyQkFBMkIsaUJBQWlCLGtCQUFrQixjQUFjLG9CQUFvQiwwQkFBMEIsc0JBQXNCLDhCQUE4QixLQUFLLG9CQUFvQix5QkFBeUIsa0JBQWtCLHlCQUF5QixxQkFBcUIsNEJBQTRCLDJCQUEyQixzQkFBc0IsT0FBTyxLQUFLLGFBQWEseUJBQXlCLEtBQUssa0JBQWtCLHdCQUF3Qix1QkFBdUIsS0FBSyxpQkFBaUIsbUVBQW1FLEtBQUssR0FBRyxxQkFBcUI7QUFDdGdFO0FBQ0EsaUVBQWUsdUJBQXVCLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jZHQtZ2RiLXZzY29kZS8uL3NyYy9tZW1vcnkvY2xpZW50L01lbW9yeUJyb3dzZXIuc2Nzcz9kNzg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiI21lbW9yeS1icm93c2Vye2FsaWduLWl0ZW1zOmxlZnQ7Ym94LXNpemluZzpib3JkZXItYm94O2hlaWdodDoxMDAlO3BhZGRpbmc6MTBweH0jbWVtb3J5LWJyb3dzZXIgLmdyb3Vwe2Rpc3BsYXk6ZmxleDtmbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC13cmFwOndyYXA7YWxpZ24taXRlbXM6ZmxleC1zdGFydH0jbWVtb3J5LWJyb3dzZXIgLmlucHV0LWdyb3Vwe2FsaWduLXNlbGY6Y2VudGVyO21hcmdpbjoycHg7bWFyZ2luLXJpZ2h0OjIwcHg7ZmxleC1zaHJpbms6Mn0jbWVtb3J5LWJyb3dzZXIgLmlucHV0LWdyb3VwIGlucHV0LCNtZW1vcnktYnJvd3NlciAuaW5wdXQtZ3JvdXAgc2VsZWN0e2JvcmRlci1yYWRpdXM6NXB4O2ZsZXgtYmFzaXM6MH0jbWVtb3J5LWJyb3dzZXIgbGFiZWx7bWFyZ2luLXJpZ2h0OjEwcHh9I21lbW9yeS1icm93c2VyIC5zZXBlcmF0b3J7Ym9yZGVyOjFweCBzb2xpZDttYXJnaW4tdG9wOjEwcHh9I21lbW9yeS1icm93c2VyIC5tb25vZm9udHtmb250LWZhbWlseTonQ29uc29sYXMnLCAnQ291cmllciBOZXcnLCBDb3VyaWVyLCBtb25vc3BhY2V9XFxuXCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL21lbW9yeS9jbGllbnQvTWVtb3J5QnJvd3Nlci5zY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQVNBLGdCQUNFLGdCQUFpQixDQUNqQixxQkFBc0IsQ0FDdEIsV0FBWSxDQUNaLFlBQWEsQ0FKZix1QkFPSSxZQUFhLENBQ2Isa0JBQW1CLENBQ25CLGNBQWUsQ0FDZixzQkFBdUIsQ0FWM0IsNkJBY0ksaUJBQWtCLENBQ2xCLFVBQVcsQ0FDWCxpQkFBa0IsQ0FDbEIsYUFBYyxDQWpCbEIsdUVBcUJNLGlCQUFrQixDQUNsQixZQUFhLENBdEJuQixzQkEyQkksaUJBQWtCLENBM0J0QiwyQkErQkksZ0JBQWlCLENBQ2pCLGVBQWdCLENBaENwQiwwQkFvQ00seURBQTBEXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTkgUU5YIFNvZnR3YXJlIFN5c3RlbXMgYW5kIG90aGVyc1xcbiAqXFxuICogVGhpcyBwcm9ncmFtIGFuZCB0aGUgYWNjb21wYW55aW5nIG1hdGVyaWFscyBhcmUgbWFkZVxcbiAqIGF2YWlsYWJsZSB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEVjbGlwc2UgUHVibGljIExpY2Vuc2UgMi4wXFxuICogd2hpY2ggaXMgYXZhaWxhYmxlIGF0IGh0dHBzOi8vd3d3LmVjbGlwc2Uub3JnL2xlZ2FsL2VwbC0yLjAvXFxuICpcXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogRVBMLTIuMFxcbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXFxuI21lbW9yeS1icm93c2VyIHtcXG4gIGFsaWduLWl0ZW1zOiBsZWZ0O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuXFxuICAuZ3JvdXAge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xcbiAgfVxcblxcbiAgLmlucHV0LWdyb3VwIHtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICBtYXJnaW46IDJweDtcXG4gICAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xcbiAgICBmbGV4LXNocmluazogMjtcXG5cXG4gICAgaW5wdXQsXFxuICAgIHNlbGVjdCB7XFxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICAgIGZsZXgtYmFzaXM6IDA7XFxuICAgIH1cXG4gIH1cXG5cXG4gIGxhYmVsIHtcXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xcbiAgfVxcblxcbiAgLnNlcGVyYXRvciB7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkO1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgfVxcblxcbiAgLm1vbm9mb250IHtcXG4gICAgICBmb250LWZhbWlseTogJ0NvbnNvbGFzJywgJ0NvdXJpZXIgTmV3JywgQ291cmllciwgbW9ub3NwYWNlO1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///506\n')},395:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(294);\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(935);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js\nvar styleDomAPI = __webpack_require__(795);\nvar styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js\nvar insertBySelector = __webpack_require__(569);\nvar insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\nvar setAttributesWithoutAttributes = __webpack_require__(565);\nvar setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js\nvar insertStyleElement = __webpack_require__(216);\nvar insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js\nvar styleTagTransform = __webpack_require__(589);\nvar styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/memory/client/MemoryBrowser.scss\nvar MemoryBrowser = __webpack_require__(506);\n;// CONCATENATED MODULE: ./src/memory/client/MemoryBrowser.scss\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (styleTagTransform_default());\noptions.setAttributes = (setAttributesWithoutAttributes_default());\n\n      options.insert = insertBySelector_default().bind(null, "head");\n    \noptions.domAPI = (styleDomAPI_default());\noptions.insertStyleElement = (insertStyleElement_default());\n\nvar update = injectStylesIntoStyleTag_default()(MemoryBrowser/* default */.Z, options);\n\n\n\n\n       /* harmony default export */ const client_MemoryBrowser = (MemoryBrowser/* default */.Z && MemoryBrowser/* default.locals */.Z.locals ? MemoryBrowser/* default.locals */.Z.locals : undefined);\n\n;// CONCATENATED MODULE: ./src/memory/client/MessageBroker.ts\nconst vscode = acquireVsCodeApi();\nclass MessageBroker {\n    constructor() {\n        this.currentToken = 1;\n        this.queue = {};\n        window.addEventListener(\'message\', (event) => {\n            const response = event.data;\n            if (response.token) {\n                this.queue[response.token](response);\n                delete this.queue[response.token];\n            }\n        });\n    }\n    send(request) {\n        return new Promise((resolve, reject) => {\n            request.token = this.currentToken++;\n            this.queue[request.token] = (result) => result.err ? reject(result.err) : resolve(result);\n            vscode.postMessage(request);\n        });\n    }\n    sendGetChildrenNames(request) {\n        return new Promise((resolve, reject) => {\n            request.token = this.currentToken++;\n            this.queue[request.token] = (result) => result.err ? reject(result.err) : resolve(result);\n            vscode.postMessage(request);\n        });\n    }\n}\nconst messageBroker = new MessageBroker();\n\n;// CONCATENATED MODULE: ./src/memory/client/MemoryBrowser.tsx\n/*********************************************************************\n * Copyright (c) 2019 QNX Software Systems and others\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *********************************************************************/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*********************************************************************\n * Based on the theia-cpp-extension in Eclipse Theia under EPL-2.0\n *********************************************************************/\n\n\n\nclass ForwardIterator {\n    constructor(array) {\n        this.array = array;\n        this.nextItem = 0;\n    }\n    next() {\n        if (this.nextItem < this.array.length) {\n            return {\n                value: this.array[this.nextItem++],\n                done: false,\n            };\n        }\n        else {\n            return {\n                done: true,\n                value: 0,\n            };\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nclass ReverseIterator {\n    constructor(array) {\n        this.array = array;\n        this.nextItem = this.array.length - 1;\n    }\n    next() {\n        if (this.nextItem >= 0) {\n            return {\n                value: this.array[this.nextItem--],\n                done: false,\n            };\n        }\n        else {\n            return {\n                done: true,\n                value: 0,\n            };\n        }\n    }\n    [Symbol.iterator]() {\n        return this;\n    }\n}\nclass MemoryBrowser_MemoryBrowser extends react.Component {\n    constructor(props) {\n        super(props);\n        this.addressReq = \'\';\n        this.lengthReq = \'512\';\n        this.childReq = 0;\n        this.state = {\n            bytesPerRow: 32,\n            bytesPerGroup: 8,\n            endianness: \'le\',\n            childrenNames: [],\n        };\n    }\n    getAvailableChildren() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const result = yield messageBroker.sendGetChildrenNames({\n                    command: \'getChildDapNames\',\n                });\n                const childrenNames = ((_b = (_a = result.result) === null || _a === void 0 ? void 0 : _a.children) === null || _b === void 0 ? void 0 : _b.map((val, index) => {\n                    return { id: index, name: val };\n                })) || [];\n                this.setState({\n                    childrenNames: childrenNames,\n                });\n            }\n            catch (_c) {\n                this.setState({\n                    childrenNames: [],\n                });\n            }\n        });\n    }\n    sendReadMemoryRequest() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.addressReq) {\n                this.setState({ error: react.createElement("h3", null, "No address") });\n            }\n            else {\n                try {\n                    this.setState({\n                        error: undefined,\n                        memory: undefined,\n                    });\n                    const result = yield messageBroker.send({\n                        command: \'ReadMemory\',\n                        args: {\n                            address: this.addressReq,\n                            length: parseInt(this.lengthReq),\n                            child: this.state.childrenNames.length ? this.childReq : undefined,\n                        },\n                    });\n                    this.setState({ memory: result.result });\n                }\n                catch (err) {\n                    this.setState({ error: react.createElement("h3", null, err + \'\') });\n                }\n            }\n        });\n    }\n    onEndiannessChange(event) {\n        const value = event.currentTarget.value;\n        if (value === \'le\' || value === \'be\') {\n            this.setState({ endianness: value });\n        }\n    }\n    renderInputSection() {\n        return (react.createElement("div", { className: "group" },\n            react.createElement("div", { className: "input-group" },\n                react.createElement("label", null, "Location"),\n                react.createElement("input", { type: "text", size: 30, title: "Memory Location to display, an address or expression evaluating to an address", placeholder: "location...", onChange: (event) => (this.addressReq = event.target.value) })),\n            react.createElement("div", { className: "input-group" },\n                react.createElement("label", null, "Length"),\n                react.createElement("input", { type: "text", size: 6, title: "Number of bytes to fetch, in decimal or hexadecimal", defaultValue: this.lengthReq, onChange: (event) => (this.lengthReq = event.target.value) })),\n            this.renderChildName(),\n            react.createElement("div", { className: "input-group" },\n                react.createElement("button", { onClick: () => this.sendReadMemoryRequest() }, "Go")),\n            react.createElement("div", { style: { width: \'30px\' } }),\n            react.createElement("div", { className: "input-group" },\n                react.createElement("label", null, "Bytes Per Row"),\n                react.createElement("select", { defaultValue: "32", onChange: (event) => this.setState({ bytesPerRow: parseInt(event.target.value) }) },\n                    react.createElement("option", { value: "16" }, "16"),\n                    react.createElement("option", { value: "32" }, "32"),\n                    react.createElement("option", { value: "64" }, "64"))),\n            react.createElement("div", { className: "input-group" },\n                react.createElement("label", null, "Bytes Per Group"),\n                react.createElement("select", { defaultValue: "8", onChange: (event) => this.setState({ bytesPerGroup: parseInt(event.target.value) }) },\n                    react.createElement("option", { value: "1" }, "1"),\n                    react.createElement("option", { value: "2" }, "2"),\n                    react.createElement("option", { value: "4" }, "4"),\n                    react.createElement("option", { value: "8" }, "8"),\n                    react.createElement("option", { value: "16" }, "16"))),\n            react.createElement("div", { className: "input-group" },\n                react.createElement("label", null,\n                    react.createElement("input", { type: "radio", value: "le", name: "endianness", defaultChecked: true, onChange: (event) => this.onEndiannessChange(event) }),\n                    "Little Endian"),\n                react.createElement("label", null,\n                    react.createElement("input", { type: "radio", value: "be", name: "endianness", defaultChecked: false, onChange: (event) => this.onEndiannessChange(event) }),\n                    "Big Endian"))));\n    }\n    hex2bytes(hex) {\n        const bytes = new Uint8Array(hex.length / 2);\n        for (let i = 0; i < hex.length / 2; i++) {\n            const hexByte = hex.slice(i * 2, (i + 1) * 2);\n            const byte = parseInt(hexByte, 16);\n            bytes[i] = byte;\n        }\n        return bytes;\n    }\n    isprint(byte) {\n        return byte >= 32 && byte < 127;\n    }\n    renderRows() {\n        if (!this.state.memory) {\n            return undefined;\n        }\n        const bytes = this.hex2bytes(this.state.memory.data);\n        const address = parseInt(this.state.memory.address, 16);\n        const rows = [];\n        for (let rowOffset = 0; rowOffset < bytes.length; rowOffset += this.state.bytesPerRow) {\n            const rowBytes = bytes.subarray(rowOffset, rowOffset + this.state.bytesPerRow);\n            const addressStr = \'0x\' + (address + rowOffset).toString(16);\n            const data = [];\n            let asciiStr = \'\';\n            for (let groupOffset = 0; groupOffset < rowBytes.length; groupOffset += this.state.bytesPerGroup) {\n                const groupBytes = rowBytes.subarray(groupOffset, groupOffset + this.state.bytesPerGroup);\n                let groupStr = \'\';\n                const iteratorType = this.state.endianness == \'be\' ? ForwardIterator : ReverseIterator;\n                for (const byte of new iteratorType(groupBytes)) {\n                    const byteStr = byte.toString(16);\n                    if (byteStr.length == 1) {\n                        groupStr += \'0\';\n                    }\n                    groupStr += byteStr;\n                }\n                data.push(groupStr);\n                for (const byte of groupBytes) {\n                    asciiStr += this.isprint(byte) ? String.fromCharCode(byte) : \'.\';\n                }\n            }\n            rows.push(react.createElement("tr", { key: rowOffset },\n                react.createElement("td", { className: "monofont", key: `addr${rowOffset}` }, addressStr),\n                data.map((group, index) => (react.createElement("td", { className: "monofont", key: `data${rowOffset},${index}` }, group))),\n                react.createElement("td", { className: "monofont", key: `asc${rowOffset}` }, asciiStr)));\n        }\n        return react.createElement(react.Fragment, null, rows);\n    }\n    renderMemory() {\n        if (!this.state.memory) {\n            return undefined;\n        }\n        return (react.createElement("div", null,\n            react.createElement("table", null,\n                react.createElement("thead", null,\n                    react.createElement("tr", null,\n                        react.createElement("th", null, "Address"),\n                        react.createElement("th", { colSpan: this.state.bytesPerRow / this.state.bytesPerGroup }, "Data"),\n                        react.createElement("th", null, "ASCII"))),\n                react.createElement("tbody", null, this.renderRows()))));\n    }\n    render() {\n        return (react.createElement("div", { id: "memory-browser" },\n            this.renderInputSection(),\n            react.createElement("hr", { className: "seperator" }),\n            this.state.error,\n            this.renderMemory()));\n    }\n    renderChildName() {\n        if (MemoryBrowser_MemoryBrowser.firstTime) {\n            this.getAvailableChildren();\n            MemoryBrowser_MemoryBrowser.firstTime = false;\n        }\n        const { childrenNames } = this.state;\n        let childrenNamesList = childrenNames.length > 0 &&\n            childrenNames.map((item, i) => {\n                return (react.createElement("option", { key: i, value: item.id }, item.name));\n            }, this);\n        if (childrenNames.length > 0) {\n            return (react.createElement("div", { className: "input-group" },\n                react.createElement("label", null, "Child"),\n                react.createElement("select", { defaultValue: this.childReq, onChange: (event) => (this.childReq = event.target.selectedIndex) }, childrenNamesList)));\n        }\n        else {\n            return react.createElement("p", null);\n        }\n    }\n}\nMemoryBrowser_MemoryBrowser.firstTime = true;\n\n;// CONCATENATED MODULE: ./src/memory/client/index.tsx\n/*********************************************************************\n * Copyright (c) 2019 QNX Software Systems and others\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *********************************************************************/\n\n\n\nreact_dom.render(react.createElement(MemoryBrowser_MemoryBrowser, null), document.getElementById(\'app\'));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///395\n')}},__webpack_module_cache__={},deferred;function __webpack_require__(Q){var e=__webpack_module_cache__[Q];if(void 0!==e)return e.exports;var F=__webpack_module_cache__[Q]={id:Q,exports:{}};return __webpack_modules__[Q](F,F.exports,__webpack_require__),F.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(Q,e,F,U)=>{if(!e){var B=1/0;for(g=0;g<deferred.length;g++){for(var[e,F,U]=deferred[g],I=!0,s=0;s<e.length;s++)(!1&U||B>=U)&&Object.keys(__webpack_require__.O).every((Q=>__webpack_require__.O[Q](e[s])))?e.splice(s--,1):(I=!1,U<B&&(B=U));if(I){deferred.splice(g--,1);var t=F();void 0!==t&&(Q=t)}}return Q}U=U||0;for(var g=deferred.length;g>0&&deferred[g-1][2]>U;g--)deferred[g]=deferred[g-1];deferred[g]=[e,F,U]},__webpack_require__.n=Q=>{var e=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(e,{a:e}),e},__webpack_require__.d=(Q,e)=>{for(var F in e)__webpack_require__.o(e,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:e[F]})},__webpack_require__.o=(Q,e)=>Object.prototype.hasOwnProperty.call(Q,e),(()=>{var Q={473:0};__webpack_require__.O.j=e=>0===Q[e];var e=(e,F)=>{var U,B,[I,s,t]=F,g=0;if(I.some((e=>0!==Q[e]))){for(U in s)__webpack_require__.o(s,U)&&(__webpack_require__.m[U]=s[U]);if(t)var n=t(__webpack_require__)}for(e&&e(F);g<I.length;g++)B=I[g],__webpack_require__.o(Q,B)&&Q[B]&&Q[B][0](),Q[B]=0;return __webpack_require__.O(n)},F=self.webpackChunkcdt_gdb_vscode=self.webpackChunkcdt_gdb_vscode||[];F.forEach(e.bind(null,0)),F.push=e.bind(null,F.push.bind(F))})(),__webpack_require__.nc=void 0;var __webpack_exports__=__webpack_require__.O(void 0,[513],(()=>__webpack_require__(395)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();